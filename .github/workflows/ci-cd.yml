name: CI/CD Workflow

on:
  push:
    branches:
    - coding
    - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Step 4: Debug file structure
    - name: Debug file structure
      run: ls -R backend

    # Step 5: Run tests
    - name: Run tests
      run: |
        pytest  # Replace with your test framework

  merge-coding-to-main:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/coding'

    steps:
    # Step 1: Checkout the coding branch
    - name: Checkout coding branch
      uses: actions/checkout@v3
      with:
        ref: coding

    # Step 2: Fetch all branches
    - name: Fetch all branches
      run: git fetch --all

    # Step 3: Merge coding into main
    - name: Merge coding into main
      run: |
        git config user.name "${{ github.actor }}"
        git config user.email "${{ github.actor }}@users.noreply.github.com"
        git checkout main
        git merge coding --no-ff --commit -m "Automated merge of coding into main"
        git push origin main

  deploy:
    needs: merge-coding-to-main
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Deploy application
    - name: Deploy application
      run: echo "Deploying to production" # Replace with your deployment script
