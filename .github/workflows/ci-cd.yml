name: CI/CD Workflow

on:
  push:
    branches:
    - coding

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Step 4: Debug file structure
    - name: Debug file structure
      run: ls -R backend

    # Step 5: Run tests
    - name: Run tests
      run: |
        pytest  # Replace with your test framework

  create-pr:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/coding'

    steps:
    # Step 1: Checkout the coding branch
    - name: Checkout coding branch
      uses: actions/checkout@v3

    # Step 2: Create Pull Request from coding to main
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        branch: coding
        base: main
        title: "Automated PR: Merge coding into main"
        body: |
          This PR was automatically created by GitHub Actions.
          It merges changes from `coding` into `main`.
        commit-message: "Automated sync: Merge coding into main"

  wait-for-merge:
    needs: create-pr
    runs-on: ubuntu-latest

    steps:
    # Step 1: Wait for PR to be merged
    - name: Wait for PR merge
      uses: actions/github-script@v6
      with:
        script: |
          const { data: pullRequests } = await github.rest.pulls.list({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: "open",
            head: `${context.repo.owner}:coding`,
          });
          if (pullRequests.length > 0) {
            console.log(`Waiting for PR #${pullRequests[0].number} to be merged.`);
            throw new Error("Pull Request not merged yet. Stopping pipeline.");
          } else {
            console.log("No open pull requests found for the coding branch. Continuing pipeline.");
          }

  deploy:
    needs: wait-for-merge
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the main branch
    - name: Checkout main branch
      uses: actions/checkout@v3
      with:
        ref: main

    # Step 2: Deploy application
    - name: Deploy application
      run: echo "Deploying to production" # Replace with your deployment script
